// 自动生成的函数元数据 - string_funcs
val functionMetas = Seq(
  Function("ascii", 1),
  Function("base64", 1),
  Function("bit_length", 1),
  Function("char", 1),
  Function("char_length", 1),
  Function("character_length", 1),
  Function("chr", 1),
  Function("decode", 2),
  Function("encode", 2),
  Function("find_in_set", 2),
  Function("format_number", 2),
  Function("initcap", 1),
  Function("instr", 2),
  Function("lcase", 1),
  Function("left", 2),
  Function("length", 1),
  Function("levenshtein", 2),
  Function("locate", 2),
  Function("locate", 3),
  Function("lower", 1),
  Function("lpad", 2),
  Function("lpad", 3),
  Function("ltrim", 2),
  Function("ltrim", 1),
  FunctionWithSignature("ltrim", 2) => FunctionMeta(ltrim, 2, WrappedArray(Expression, Option), string_funcs),
  Function("octet_length", 1),
  Function("overlay", 4),
  Function("overlay", 3),
  Function("position", 2),
  Function("position", 3),
  Function("regexp_extract", 2),
  Function("regexp_extract", 3),
  Function("regexp_replace", 3),
  Function("repeat", 2),
  Function("replace", 3),
  Function("replace", 2),
  Function("right", 2),
  Function("rpad", 2),
  Function("rpad", 3),
  Function("rtrim", 2),
  Function("rtrim", 1),
  FunctionWithSignature("rtrim", 2) => FunctionMeta(rtrim, 2, WrappedArray(Expression, Option), string_funcs),
  Function("sentences", 3),
  Function("sentences", 1),
  Function("sentences", 2),
  Function("soundex", 1),
  Function("space", 1),
  Function("split", 3),
  Function("split", 2),
  Function("substr", 2),
  Function("substr", 3),
  Function("substring", 2),
  Function("substring", 3),
  Function("substring_index", 3),
  Function("translate", 3),
  Function("trim", 2),
  Function("trim", 1),
  FunctionWithSignature("trim", 2) => FunctionMeta(trim, 2, WrappedArray(Expression, Option), string_funcs),
  Function("ucase", 1),
  Function("unbase64", 1),
  Function("upper", 1)
)
