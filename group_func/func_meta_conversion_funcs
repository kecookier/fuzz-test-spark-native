// 自动生成的函数元数据 - conversion_funcs
val functionMetas = Seq(
  FunctionWithSignature("bigint", 3) => FunctionMeta(bigint, 3, WrappedArray(Expression, DataType, Option), conversion_funcs),
  FunctionWithSignature("binary", 3) => FunctionMeta(binary, 3, WrappedArray(Expression, DataType, Option), conversion_funcs),
  FunctionWithSignature("boolean", 3) => FunctionMeta(boolean, 3, WrappedArray(Expression, DataType, Option), conversion_funcs),
  FunctionWithSignature("cast", 3) => FunctionMeta(cast, 3, WrappedArray(Expression, DataType, Option), conversion_funcs),
  FunctionWithSignature("date", 3) => FunctionMeta(date, 3, WrappedArray(Expression, DataType, Option), conversion_funcs),
  FunctionWithSignature("decimal", 3) => FunctionMeta(decimal, 3, WrappedArray(Expression, DataType, Option), conversion_funcs),
  FunctionWithSignature("double", 3) => FunctionMeta(double, 3, WrappedArray(Expression, DataType, Option), conversion_funcs),
  FunctionWithSignature("float", 3) => FunctionMeta(float, 3, WrappedArray(Expression, DataType, Option), conversion_funcs),
  FunctionWithSignature("int", 3) => FunctionMeta(int, 3, WrappedArray(Expression, DataType, Option), conversion_funcs),
  FunctionWithSignature("smallint", 3) => FunctionMeta(smallint, 3, WrappedArray(Expression, DataType, Option), conversion_funcs),
  FunctionWithSignature("string", 3) => FunctionMeta(string, 3, WrappedArray(Expression, DataType, Option), conversion_funcs),
  FunctionWithSignature("timestamp", 3) => FunctionMeta(timestamp, 3, WrappedArray(Expression, DataType, Option), conversion_funcs),
  FunctionWithSignature("tinyint", 3) => FunctionMeta(tinyint, 3, WrappedArray(Expression, DataType, Option), conversion_funcs)
)
